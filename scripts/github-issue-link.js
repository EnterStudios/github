// Generated by CoffeeScript 1.10.0
(function() {
  module.exports = function(robot) {
    var github, githubIgnoreUsers;
    github = require("githubot")(robot);
    githubIgnoreUsers = process.env.HUBOT_GITHUB_ISSUE_LINK_IGNORE_USERS;
    if (githubIgnoreUsers === void 0) {
      githubIgnoreUsers = "github|hubot";
    }
    return robot.hear(/((\S*|^)?#(\d+)).*/, function(msg) {
      var base_url, bot_github_repo, issue_number, issue_title;
      if (msg.message.user.name.match(new RegExp(githubIgnoreUsers, "gi"))) {
        return;
      }
      issue_number = msg.match[3];
      if (isNaN(issue_number)) {
        return;
      }
      if (msg.match[2] === void 0) {
        bot_github_repo = github.qualified_repo(process.env.HUBOT_GITHUB_REPO);
      } else {
        bot_github_repo = github.qualified_repo(msg.match[2]);
      }
      issue_title = "";
      base_url = process.env.HUBOT_GITHUB_API || 'https://api.github.com';
      return github.get((base_url + "/repos/" + bot_github_repo + "/issues/") + issue_number, function(issue_obj) {
        var url;
        issue_title = issue_obj.title;
        if (!process.env.HUBOT_GITHUB_API) {
          url = "https://github.com";
        } else {
          url = base_url.replace(/\/api\/v3/, '');
        }
        return msg.send("Issue " + issue_number + ": " + issue_title + " " + url + "/" + bot_github_repo + "/issues/" + issue_number);
      });
    });
  };

}).call(this);
